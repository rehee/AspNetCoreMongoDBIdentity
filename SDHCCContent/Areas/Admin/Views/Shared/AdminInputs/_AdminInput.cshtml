@model SDHCC.DB.Content.ContentPropertyIndex
@Html.Hidden("Properties[" + Model.Index.ToString() + "].Key", Model.Property.Key)
@Html.Hidden("Properties[" + Model.Index.ToString() + "].ValueType", Model.Property.ValueType)
@Html.Hidden("Properties[" + Model.Index.ToString() + "].EditorType", Model.Property.EditorType)
@Html.Hidden("Properties[" + Model.Index.ToString() + "].MultiSelect", Model.Property.MultiSelect)
@{
  var valueName = "Value";
  if (Model.Property.MultiSelect)
  {

    valueName = "MultiValue";

  }
  var inputName = "Properties[" + @Model.Index.ToString() + "]." + @valueName;
}


<div class="form-group">
  <label>@Model.Property.Title</label>


  @if (Model.Property.EditorType == SDHCC.EnumInputType.TextArea)
  {
    <textarea class="form-control" rows="5" name="@inputName">@Model.Property.Value</textarea>
  }
  @if (Model.Property.EditorType == SDHCC.EnumInputType.Text)
  {
    <input type="text" class="form-control" name="@inputName" value="@Model.Property.Value" />
  }
  @if (Model.Property.EditorType == SDHCC.EnumInputType.DateTime)
  {
    <div class='input-group date datetimepicker' id="mydatepicker">
      <input type='text' class="form-control" name="@inputName" value="@Model.Property.Value.Split(' ').FirstOrDefault()" placeholder="yyyy-mm-dd" />
      <span class="input-group-addon">
        <span class="glyphicon glyphicon-calendar"></span>
      </span>
    </div>
  }
  @if (Model.Property.EditorType == SDHCC.EnumInputType.DropDwon)
  {
    <select name="@inputName" @(Model.Property.MultiSelect ? "multiple" : "")>
      @foreach (var item in Model.Property.SelectItems)
      {
        if (item.Select)
        {
          <option selected value="@(item.Value)">@(item.Name)</option>
        }
        else
        {
          <option value="@(item.Value)">@(item.Name)</option>
        }

      }
    </select>
  }
</div>