@model IEnumerable<SDHCC.DB.Models.DropDownSummary>
@{
    ViewData["Title"] = "Index";
    Layout = "_Layout_Content";
}
@section breadcrumb{
    @{ await Html.RenderPartialAsync("_BreadCrumbDropDown", Enumerable.Empty<string>());}
}

<div class="card">
    <div class="card-block">
        <h4 class="card-title">Static</h4>
        <div id="staticgrid"></div>
    </div>
</div>


@section script{
    <script>
        window.contents = {};
        contents.clients = [
            @foreach(var item in Model)
            {
                <text>
                {
                    "id": "@item.DropDownName",
                    "Name": "@item.DropDownName",
                    "Count": "@item.Count",
                    "Type": "@item.DropDownName",
                },
              </text>
            }
              ];
        ! function (document, window, $) {
            "use strict";
            var Site = window.Site;
            $(document).ready(function ($) {

            }), jsGrid.setDefaults({
                tableClass: "jsgrid-table table table-striped table-hover"
            }), jsGrid.setDefaults("text", {
                _createTextBox: function () {
                    return $("<input>").attr("type", "text").attr("class", "form-control input-sm")
                }
            }), jsGrid.setDefaults("number", {
                _createTextBox: function () {
                    return $("<input>").attr("type", "number").attr("class", "form-control input-sm")
                }
            }), jsGrid.setDefaults("textarea", {
                _createTextBox: function () {
                    return $("<input>").attr("type", "textarea").attr("class", "form-control")
                }
            }), jsGrid.setDefaults("control", {
                _createGridButton: function (cls, tooltip, clickHandler) {
                    var grid = this._grid;
                    return $("<button>").addClass(this.buttonClass).addClass(cls).attr({
                        type: "button",
                        title: tooltip
                    }).on("click", function (e) {
                        clickHandler(grid, e)
                    })
                }
            }),
                function () {
                    $("#staticgrid").jsGrid({
                        height: "500px",
                        width: "100%",
                        sorting: !0,
                        paging: !0,
                        data: contents.clients,
                        rowClick: function(b){
                            window.location.href = "@Url.Action("List","DropDown",new { @area="Admin",@id=""})/" + b.item.Name;
                        },
                        fields: [ {
                            name: "Name",
                            type: "text",
                            width: 150
                        },{
                            name: "Count",
                            type: "number",
                            width: 5
                        },]
                    })
                }(),
                function () {
                    var MyDateField = function (config) {
                        jsGrid.Field.call(this, config)
                    };
                    MyDateField.prototype = new jsGrid.Field({
                        sorter: function (date1, date2) {
                            return new Date(date1) - new Date(date2)
                        },
                        itemTemplate: function (value) {
                            return new Date(value).toDateString()
                        },
                        insertTemplate: function () {
                            if (!this.inserting) return "";
                            var $result = this.insertControl = this._createTextBox();
                            return $result
                        },
                        editTemplate: function (value) {
                            if (!this.editing) return this.itemTemplate(value);
                            var $result = this.editControl = this._createTextBox();
                            return $result.val(value), $result
                        },
                        insertValue: function () {
                            return this.insertControl.datepicker("getDate")
                        },
                        editValue: function () {
                            return this.editControl.datepicker("getDate")
                        },
                        _createTextBox: function () {
                            return $("<input>").attr("type", "text").addClass("form-control input-sm").datepicker({
                                autoclose: !0
                            })
                        }
                    }), jsGrid.fields.myDateField = MyDateField
                }()
        }(document, window, jQuery);


    </script>

}

